{"ast":null,"code":"var _jsxFileName = \"/home/mithun/Countdown-Timer/src/App.js\";\nimport React from 'react';\nimport tachyons from 'tachyons';\nimport './App.css'; // import {Image} from './components/timer Image/timer.jpeg';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getData = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.updateDate = () => {\n      if (this.state.updateDate === null || this.state.input === '') {\n        alert('please enter valid date');\n      } else {\n        let diff = new Date(this.state.input) - new Date();\n        let days = Math.floor(diff / 1000 * 60 * 60 * 24);\n        let intervalX = setInterval(() => {\n          let diff = new Date(this.state.input) - new Date();\n          let days = Math.floor(diff / (1000 * 60 * 60 * 24));\n          let hours = Math.floor(diff % (1000 * 60 * 60 * 24) / 1000 * 60 * 60);\n          let minutes = Math.floor(diff % (1000 * 60 * 60) / 1000 * 60);\n          let seconds = Math.floor(diff % (1000 * 60) / 1000);\n          this.setState({\n            updateDate: `${days} d : ${hours} h : ${minutes} m : ${seconds} s`\n          });\n        }, 1000);\n      }\n    };\n\n    this.state = {\n      input: '',\n      current: new Date().toUTCString(),\n      currentDate: new Date().toLocaleDateString(),\n      updateDate: \"0 days\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__layout\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card__heading\",\n            children: this.state.current\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card__heading\",\n            children: this.state.updatedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.input,\n            onChange: this.getData,\n            className: \"card__input\",\n            type: \"date\",\n            required: true,\n            className: \"card__input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 140\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.updateDate,\n            className: \"card__btn\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mithun/Countdown-Timer/src/App.js"],"names":["React","tachyons","App","Component","constructor","getData","e","setState","input","target","value","updateDate","state","alert","diff","Date","days","Math","floor","intervalX","setInterval","hours","minutes","seconds","current","toUTCString","currentDate","toLocaleDateString","render","updatedDate"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport tachyons from 'tachyons';\nimport './App.css';\n// import {Image} from './components/timer Image/timer.jpeg';\n\n\nclass App extends React.Component{\nconstructor(){\n    super();\n    this.state ={\n        input:'',\n        current:new Date().toUTCString(),\n        currentDate: new Date().toLocaleDateString(),\n        updateDate:\"0 days\"\n\n    }\n}\ngetData=(e)=>{\n    this.setState({input:e.target.value})\n}\n\nupdateDate=()=>{\n    if(this.state.updateDate===null || this.state.input=== ''){\n        alert('please enter valid date');\n    }else{\n        let diff= new Date(this.state.input)-new Date();\n        let days = Math.floor(diff/1000*60*60*24);\n        let intervalX= setInterval(()=>{\n            let diff= new Date(this.state.input)-new Date();\n            let days = Math.floor(diff/(1000*60*60*24))\n            let hours = Math.floor(diff % (1000*60*60*24)/1000*60*60)\n            let minutes = Math.floor(diff % (1000*60*60)/1000*60)\n            let seconds = Math.floor(diff % (1000*60)/1000)\n\n            this.setState({updateDate:`${days} d : ${hours} h : ${minutes} m : ${seconds} s`})\n\n\n        },1000)\n    }\n}\nrender(){\n    return(\n    <div>\n            \n        <div className=\"App\">\n            <div className=\"card__layout\">\n            <h2 className=\"card__heading\">{this.state.current}</h2>\n            <h2 className=\"card__heading\">{this.state.updatedDate}</h2>\n\n            <input value={this.state.input} onChange={this.getData} className=\"card__input\" type=\"date\" required className=\"card__input\" /><br />\n            <button onClick={this.updateDate} className='card__btn'>Submit</button>\n            </div>\n        </div>\n    </div>\n    )\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}