{"ast":null,"code":"var _jsxFileName = \"/home/mithun/countdown timer/src/App.js\";\nimport React from 'react';\nimport Input from './components/Input';\nimport Submit from './components/Submit';\nimport Clock from './components/Clock';\nimport tachyons from 'tachyons';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.dateDisplay = event => {\n      this.setState({\n        inputVal: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      if (this.state.inputVal !== \"\") {\n        this.countDown = new Date(this.state.inputVal).getTime();\n        this.date = new Date(this.state.inputVal).toDateString(); // this.setState({inputVal:\"\"});\n\n        this.mainCalc();\n      }\n    };\n\n    this.mainCalc = () => {\n      let now = new Date().getTime();\n      let count = this.countDown - now;\n      this.clockTimer(count);\n    };\n\n    this.clockTimer = count => {\n      this.interval = setInterval(() => {\n        count = 1000;\n        let days = Math.floor(count / (24 * 60 * 60 * 1000));\n        let hours = Math.floor(count % (24 * 60 * 60 * 1000) / (60 * 60 * 1000));\n        let minutes = Math.floor(count % (60 * 60 * 1000) / (60 * 1000));\n        let seconds = Math.floor(count % (60 * 1000) / 1000);\n        this.setState({\n          days: days,\n          hours: hours,\n          minutes: minutes,\n          seconds: seconds\n        });\n      }, 1000);\n    };\n\n    this.countDown = 0;\n    this.interval = undefined;\n    this.date = \"\";\n    this.state = {\n      inputVal: '',\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Timer Ends On \", this.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Clock, {\n          days: this.state.days,\n          hours: this.state.hours,\n          minutes: this.state.minutes,\n          seconds: this.state.seconds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          display: this.dateDisplay,\n          value: this.state.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Submit, {\n          submit: this.onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mithun/countdown timer/src/App.js"],"names":["React","Input","Submit","Clock","tachyons","App","Component","constructor","dateDisplay","event","setState","inputVal","target","value","onSubmit","state","countDown","Date","getTime","date","toDateString","mainCalc","now","count","clockTimer","interval","setInterval","days","Math","floor","hours","minutes","seconds","undefined","render","input"],"mappings":"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","sourcesContent":["import React from 'react'; \n\nimport Input from './components/Input';\nimport Submit from './components/Submit';\nimport Clock from './components/Clock';\nimport tachyons from 'tachyons';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.countDown = 0;\n    this.interval = undefined;\n    this.date = \"\";\n    this.state ={\n      inputVal : '',\n      days:0,\n      hours:0,\n      minutes:0,\n      seconds:0\n    }\n   \n  }\n\n  dateDisplay =(event)=>{\n    this.setState({inputVal:event.target.value})\n  }\n\n  onSubmit=()=>{\n    if(this.state.inputVal !== \"\"){\n      this.countDown = new Date(this.state.inputVal).getTime();\n      this.date = new Date (this.state.inputVal).toDateString();\n      // this.setState({inputVal:\"\"});\n      this.mainCalc();\n    }\n  }\n\n  mainCalc=()=>{\n    let now = new Date().getTime();\n    let count= this.countDown - now;\n    this.clockTimer(count); \n  }\n\n  clockTimer=(count)=>{\n    this.interval = setInterval(()=>{\n      count =1000;\n      let days = Math.floor(count / (24*60*60*1000));\n      let hours = Math.floor(count % (24*60*60*1000)/(60*60*1000));\n      let minutes = Math.floor(count % (60*60*1000)/(60*1000));\n      let seconds= Math.floor(count % (60*1000)/(1000));\n      this.setState({days: days, hours: hours, minutes: minutes, seconds: seconds})\n    },1000);\n\n  }\n\n  render(){\n    return (\n      <div>\n        <div>\n          <h1>\n            Timer Ends On {this.date}\n          </h1>\n          <Clock days={this.state.days} hours={this.state.hours} minutes={this.state.minutes}  seconds={this.state.seconds}/>\n          <Input display={this.dateDisplay} value={this.state.input}/>\n          <Submit submit={this.onSubmit}/>\n        </div>\n      </div>\n    )\n    \n  }\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}